---
import DemoLayout from "../../layouts/DemoLayout.astro";

// Get subdomain info
const { subdomain, isDemoSubdomain } = Astro.locals;
const isOnDemoSubdomain = isDemoSubdomain || subdomain === 'demo' || subdomain === 'demos' || subdomain === 'Demo' || subdomain === 'Demos';

// Demo routes configuration
const demoRoutes = [
    {
        name: "LinkTree Demo",
        path: "/LinkTree",
        description: "Interactive LinkTree style page demo",
        category: "Social"
    },
    {
        name: "Wedding Demo",
        path: "/Wedding", 
        description: "Special events link collection page",
        category: "Events"
    },
    {
        name: "Drone Demo",
        path: "/Video", 
        description: "Scroll-controlled video demo",
        category: "Marketing"
    },
    // Add more demo routes as needed
];
---

<DemoLayout>
    <div class="min-h-screen bg-gradient-to-br from-[#f6f7fb] via-[#f9fafb] to-[#e9ecf3] py-10">
        <div class="max-w-5xl mx-auto px-2 sm:px-6 lg:px-8">
            <!-- Header -->
            <div class="text-center mb-10">
                <span class="block mb-2 text-xs font-semibold uppercase tracking-wider text-[#123472] opacity-70">
                    {isOnDemoSubdomain ? 'Demo Subdomain' : 'Demo Gallery'}
                </span>
                <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 mb-4">
                    <span class="text-[#123472]">Adag</span><span class="text-[#ff0040]">IO</span>
                    <span class="block text-xl sm:text-2xl lg:text-3xl mt-1 text-gray-700 opacity-70 font-normal">
                        Live Demos
                    </span>
                </h1>
                <p class="text-base sm:text-lg text-gray-500 max-w-xl mx-auto leading-relaxed">
                    Explore interactive demos and prototypes. Each demo showcases different technologies and design approaches.
                </p>
                {isOnDemoSubdomain && (
                    <div class="mt-4 p-2 bg-blue-50 border border-blue-100 rounded-lg max-w-xs mx-auto">
                        <p class="text-xs text-blue-700">
                            <strong>üåê Subdomain Active:</strong> You're viewing from the demo subdomain
                        </p>
                    </div>
                )}
            </div>
            <!-- Demo Grid -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {demoRoutes.map((demo) => (
                    <div class="bg-white rounded-xl border border-gray-100 p-5 hover:shadow-lg transition-all duration-300 hover:-translate-y-1 group">
                        <div class="mb-3">
                            <div class="w-10 h-10 bg-gradient-to-r from-[#123472] to-[#ff0040] rounded-lg flex items-center justify-center mb-3 group-hover:scale-105 transition-transform duration-300">
                                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                                </svg>
                            </div>
                            <h3 class="text-lg font-semibold text-gray-900 mb-1 group-hover:text-[#123472] transition-colors duration-300">
                                {demo.name}
                            </h3>
                            <p class="text-gray-500 text-sm mb-3">
                                {demo.description}
                            </p>
                            <div class="flex items-center justify-between">
                                <span class="inline-block px-2 py-0.5 text-xs font-medium bg-gray-50 text-gray-600 rounded-full">
                                    {demo.category}
                                </span>
                                <a 
                                    href={isOnDemoSubdomain ? demo.path : `/Demos${demo.path}`}
                                    class="inline-flex items-center text-xs font-medium text-[#123472] hover:text-[#ff0040] transition-colors duration-200"
                                >
                                    View
                                    <svg class="w-3 h-3 ml-1 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                    </svg>
                                </a>
                            </div>
                        </div>
                    </div>
                ))}
                <!-- Coming Soon Card -->
                <div class="bg-white rounded-xl border-2 border-dashed border-gray-200 p-5 flex flex-col items-center justify-center text-center min-h-[160px]">
                    <div class="w-10 h-10 bg-gray-200 rounded-lg flex items-center justify-center mb-3">
                        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                        </svg>
                    </div>
                    <h3 class="text-base font-semibold text-gray-600 mb-1">
                        More Demos Coming Soon
                    </h3>
                    <p class="text-gray-400 text-xs">
                        We're constantly building new demonstrations to showcase our capabilities.
                    </p>
                </div>
            </div>
            <!-- Info Section -->
            <div class="mt-12 bg-white rounded-xl border border-gray-100 p-6">
                <div class="text-center">
                    <h2 class="text-xl font-bold text-gray-900 mb-3">
                        About These Demos
                    </h2>
                    <p class="text-gray-500 max-w-xl mx-auto mb-4 text-sm">
                        Each demo is a functional prototype that demonstrates specific technologies, design patterns, or user interaction concepts. Built using modern web technologies and best practices.
                    </p>
                    <div class="flex flex-wrap justify-center gap-3">
                        <span class="px-3 py-1 bg-gray-50 text-gray-600 rounded-full text-xs font-medium">
                            Astro
                        </span>
                        <span class="px-3 py-1 bg-gray-50 text-gray-600 rounded-full text-xs font-medium">
                            React
                        </span>
                        <span class="px-3 py-1 bg-gray-50 text-gray-600 rounded-full text-xs font-medium">
                            Tailwind CSS
                        </span>
                        <span class="px-3 py-1 bg-gray-50 text-gray-600 rounded-full text-xs font-medium">
                            TypeScript
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</DemoLayout>

<script>
    // Add some interactive behavior
    document.addEventListener('DOMContentLoaded', () => {
        // Animate demo cards on scroll
        const cards = document.querySelectorAll('.group') as NodeListOf<HTMLElement>;
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const target = entry.target as HTMLElement;
                    target.style.opacity = '1';
                    target.style.transform = 'translateY(0)';
                }
            });
        }, {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        });

        cards.forEach((card, index) => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(30px)';
            card.style.transition = `opacity 0.6s ease ${index * 0.1}s, transform 0.6s ease ${index * 0.1}s`;
            observer.observe(card);
        });
    });
</script>